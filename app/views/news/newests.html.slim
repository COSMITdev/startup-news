- collection.newests.page(params[:page]).per(20).each do |news|
  .news-box
    - vote_exists = Vote.find_user_for_news(current_user, news) if user_signed_in?
    = render partial: "vote", locals: { vote_exists: vote_exists, news: news }

    h4 = link_to truncate(news.title, length: 90, omission: '...'), news.link, target: "_blank"
    p.link
      = "(#{t("news.pontos", count: news.up)}) "
      = host_for_link(news.link)

    p.timestamp
      = "#{time_ago_in_words(news.created_at)} atrás "
      |  por&nbsp;
      strong = news.user.username
      = " · "
      = link_to "Comentários", news_path(news, :anchor => "disqus_thread"), :"data-disqus-identifer" => news.id
    = render partial: "disqus/comment_count_javascript", locals: {news: news}
.text-center
  = paginate collection.newests.page(params[:page]).per(20)
